#include <iostream>
using namespace std;
struct BitCodeASCII{
    unsigned short old : 4;
    unsigned short position : 7;
    unsigned short young : 4;
    unsigned short parity : 1;
};
union BitShort{
    BitCodeASCII bca;
    unsigned short usa;
};
void Shifruvanna(char S[128], unsigned short Rez[128],BitCodeASCII sh3[64],BitCodeASCII ch4[64],BitCodeASCII r2, BitCodeASCII w2,BitShort uprn)
{
    unsigned char c;
    unsigned short r, t, i, b;
    short j;
    cin.get(S, 128);
    for (i = 0;i<128;i++)
    {
        r = 0; 
        c = S[i];
        t = c;
        r |= t >> 4;
        r2.old=r;
        r |= i << 4;
        r2.young=r;
        r2.parity = r & 1;
        t = c;
        r |= t << 11; 
        t = 1;
        b = 0;
        for (j = 0;j<16;j++)
        {
            if (r&t) 
            {
                if (b==0) b = 1; 
                else b = 0;
            }
            t <<= 1;
        }
        r |= b << 15;
        Rez[i] = r;
    }
}
int main()
{
    BitCodeASCII sh3[64], ch4[64],r2,w2;
    BitShort uprn;
    char S[128];
    unsigned short Rez[128];
    unsigned short i;
    cin.get(S, 128);
    Shifruvanna(S, Rez,sh3,ch4,r2,w2,uprn);
    cout << hex << uprn.usa << ' '<<endl;
    for (i = 0;i<128;i++)
    cout << hex << Rez[i] << " ";
    return 0;
}